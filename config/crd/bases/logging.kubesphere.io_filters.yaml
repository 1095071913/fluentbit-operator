
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: filters.logging.kubesphere.io
spec:
  group: logging.kubesphere.io
  names:
    kind: Filter
    plural: filters
  scope: ""
  validation:
    openAPIV3Schema:
      description: Filter defines a Filter configuration.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed. Finalizers may
                be processed and removed in any order.  Order is NOT enforced because
                it introduces significant risk of stuck finalizers. finalizers is
                a shared field, any actor with permission can reorder it. If the finalizer
                list is processed in order, then this can lead to a situation in which
                the component responsible for the first finalizer in the list is waiting
                for a signal (field value, external system, or other) produced by
                a component responsible for a finalizer later in the list, resulting
                in a deadlock. Without enforced ordering finalizers are free to order
                amongst themselves and are not vulnerable to ordering changes in the
                list.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: ManagedFields maps workflow-id and version to the set of
                fields that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or understand
                this field. A workflow can be the user's name, a controller's name,
                or the name of a specific apply path like "ci-cd". The set of fields
                is always in the version that the workflow used when modifying the
                object.
              items:
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fieldsType:
                    description: 'FieldsType is the discriminator for the different
                      fields format and version. There is currently only one possible
                      value: "FieldsV1"'
                    type: string
                  fieldsV1:
                    description: FieldsV1 holds the first JSON version format as described
                      in the "FieldsV1" type.
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is timestamp of when these fields were set.
                      It should always be empty if Operation is 'Apply'
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within each name must be unique.
                An empty namespace is equivalent to the \"default\" namespace, but
                \"default\" is the canonical representation. Not all objects are required
                to be scoped to a namespace - the value of this field for those objects
                will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: "SelfLink is a URL representing this object. Populated
                by the system. Read-only. \n DEPRECATED Kubernetes will stop propagating
                this field in 1.20 release and the field is planned to be removed
                in 1.21 release."
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          description: Specification of desired Filter configuration.
          properties:
            filters:
              description: A set of filter plugins in order.
              items:
                properties:
                  kubernetes:
                    description: Kubernetes defines Kubernetes Filter configuration.
                    properties:
                      annotations:
                        description: Include Kubernetes resource annotations in the
                          extra metadata.
                        type: boolean
                      bufferSize:
                        description: Set the buffer size for HTTP client when reading
                          responses from Kubernetes API server.
                        pattern: ^\d+(k|K|KB|kb|m|M|MB|mb|g|G|GB|gb)?$
                        type: string
                      dummyMeta:
                        description: If set, use dummy-meta data (for test/dev purposes)
                        type: boolean
                      k8sLoggingExclude:
                        description: Allow Kubernetes Pods to exclude their logs from
                          the log processor (read more about it in Kubernetes Annotations
                          section).
                        type: boolean
                      k8sLoggingParser:
                        description: Allow Kubernetes Pods to suggest a pre-defined
                          Parser (read more about it in Kubernetes Annotations section)
                        type: boolean
                      keepLog:
                        description: When Keep_Log is disabled, the log field is removed
                          from the incoming message once it has been successfully
                          merged (Merge_Log must be enabled as well).
                        type: boolean
                      kubeCAFile:
                        description: CA certificate file
                        type: string
                      kubeCAPath:
                        description: Absolute path to scan for certificate files
                        type: string
                      kubeMetaPreloadCacheDir:
                        description: If set, Kubernetes meta-data can be cached/pre-loaded
                          from files in JSON format in this directory, named as namespace-pod.meta
                        type: string
                      kubeTagPrefix:
                        description: When the source records comes from Tail input
                          plugin, this option allows to specify what's the prefix
                          used in Tail configuration.
                        type: string
                      kubeTokenFile:
                        description: Token file
                        type: string
                      kubeURL:
                        description: API Server end-point
                        type: string
                      labels:
                        description: Include Kubernetes resource labels in the extra
                          metadata.
                        type: boolean
                      mergeLog:
                        description: When enabled, it checks if the log field content
                          is a JSON string map, if so, it append the map fields as
                          part of the log structure.
                        type: boolean
                      mergeLogKey:
                        description: When Merge_Log is enabled, the filter tries to
                          assume the log field from the incoming message is a JSON
                          string message and make a structured representation of it
                          at the same level of the log field in the map. Now if Merge_Log_Key
                          is set (a string name), all the new structured fields taken
                          from the original log content are inserted under the new
                          key.
                        type: string
                      mergeLogTrim:
                        description: When Merge_Log is enabled, trim (remove possible
                          \n or \r) field values.
                        type: boolean
                      mergeParser:
                        description: Optional parser name to specify how to parse
                          the data contained in the log key. Recommended use is for
                          developers or testing only.
                        type: string
                      regexParser:
                        description: Set an alternative Parser to process record Tag
                          and extract pod_name, namespace_name, container_name and
                          docker_id. The parser must be registered in a parsers file
                          (refer to parser filter-kube-test as an example).
                        type: string
                      tlsDebug:
                        description: Debug level between 0 (nothing) and 4 (every
                          detail).
                        format: int32
                        type: integer
                      tlsVerify:
                        description: When enabled, turns on certificate validation
                          when connecting to the Kubernetes API server.
                        type: boolean
                      useJournal:
                        description: When enabled, the filter reads logs coming in
                          Journald format.
                        type: boolean
                    type: object
                  modify:
                    description: Modify defines Modify Filter configuration.
                    properties:
                      conditions:
                        description: All conditions have to be true for the rules
                          to be applied.
                        items:
                          properties:
                            aKeyMatches:
                              description: Is true if a key matches regex KEY
                              type: string
                            keyDoesNotExist:
                              additionalProperties:
                                type: string
                              description: Is true if KEY does not exist
                              type: object
                            keyExists:
                              description: Is true if KEY exists
                              type: string
                            keyValueDoesNotEqual:
                              additionalProperties:
                                type: string
                              description: Is true if KEY exists and its value is
                                not VALUE
                              type: object
                            keyValueDoesNotMatch:
                              additionalProperties:
                                type: string
                              description: Is true if key KEY exists and its value
                                does not match VALUE
                              type: object
                            keyValueEquals:
                              additionalProperties:
                                type: string
                              description: Is true if KEY exists and its value is
                                VALUE
                              type: object
                            keyValueMatches:
                              additionalProperties:
                                type: string
                              description: Is true if key KEY exists and its value
                                matches VALUE
                              type: object
                            matchingKeysDoNotHaveMatchingValues:
                              additionalProperties:
                                type: string
                              description: Is true if all keys matching KEY have values
                                that do not match VALUE
                              type: object
                            matchingKeysHaveMatchingValues:
                              additionalProperties:
                                type: string
                              description: Is true if all keys matching KEY have values
                                that match VALUE
                              type: object
                            noKeyMatches:
                              description: Is true if no key matches regex KEY
                              type: string
                          type: object
                        type: array
                      rules:
                        description: Rules are applied in the order they appear, with
                          each rule operating on the result of the previous rule.
                        items:
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              description: Add a key/value pair with key KEY and value
                                VALUE if KEY does not exist
                              type: object
                            copy:
                              additionalProperties:
                                type: string
                              description: Copy a key/value pair with key KEY to COPIED_KEY
                                if KEY exists AND COPIED_KEY does not exist
                              type: object
                            hardCopy:
                              additionalProperties:
                                type: string
                              description: Copy a key/value pair with key KEY to COPIED_KEY
                                if KEY exists. If COPIED_KEY already exists, this
                                field is overwritten
                              type: object
                            hardRename:
                              additionalProperties:
                                type: string
                              description: Rename a key/value pair with key KEY to
                                RENAMED_KEY if KEY exists. If RENAMED_KEY already
                                exists, this field is overwritten
                              type: object
                            remove:
                              description: Remove a key/value pair with key KEY if
                                it exists
                              type: string
                            removeRegex:
                              description: Remove all key/value pairs with key matching
                                regexp KEY
                              type: string
                            removeWildcard:
                              description: Remove all key/value pairs with key matching
                                wildcard KEY
                              type: string
                            rename:
                              additionalProperties:
                                type: string
                              description: Rename a key/value pair with key KEY to
                                RENAMED_KEY if KEY exists AND RENAMED_KEY does not
                                exist
                              type: object
                            set:
                              additionalProperties:
                                type: string
                              description: Add a key/value pair with key KEY and value
                                VALUE. If KEY already exists, this field is overwritten
                              type: object
                          type: object
                        type: array
                    type: object
                  nest:
                    description: Nest defines Nest Filter configuration.
                    properties:
                      addPrefix:
                        description: Prefix affected keys with this string
                        type: string
                      nestUnder:
                        description: Nest records matching the Wildcard under this
                          key
                        type: string
                      nestedUnder:
                        description: Lift records nested under the Nested_under key
                        type: string
                      operation:
                        description: Select the operation nest or lift
                        enum:
                        - nest
                        - list
                        type: string
                      removePrefix:
                        description: Remove prefix from affected keys if it matches
                          this string
                        type: string
                      wildcard:
                        description: Nest records which field matches the wildcard
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              type: array
            match:
              description: A pattern to match against the tags of incoming records.
                It's case sensitive and support the star (*) character as a wildcard.
              type: string
            matchRegex:
              description: A regular expression to match against the tags of incoming
                records. Use this option if you want to use the full regex syntax.
              type: string
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
